input ModuleChildParametersInput {
  name: String!
  kind: String
  type: ModuleChildTypeInput
}

input ModuleChildSignatureInput {
  name: String!
  kind: String!
  type: ModuleChildTypeInput!
  comment: ModuleChildCommentInput
  parameters: [ModuleChildParametersInput!]
  typeParameter: [ModuleChildParametersInput!]
}

input ModuleChildTypeInput {
  type: String!
  name: String
  file: String
  types: [ModuleChildTypeInput!]
  typeArguments: [ModuleChildTypeInput!]
}

input ModuleChildCommentInput {
  shortText: String
  text: String
}

input ModuleChildrenInput {
  name: String!
  tagged: Boolean
  kind: String
  comment: ModuleChildCommentInput
  children: [ModuleChildrenInput!]
  type: ModuleChildTypeInput
  indexSignature: [ModuleChildSignatureInput!]
  getSignature: [ModuleChildSignatureInput!]
  signatures: [ModuleChildSignatureInput!]
  typeParameter: [ModuleChildParametersInput!]
}

input ModuleFileInput {
  name: String!
  kind: String
  path: String!
  children: [ModuleChildrenInput!]
}

input ModuleCommit {
  sha: String!
  branch: String!
}

input PublishProgress {
  nodesPublished: Int!
  nodesTotal: Int!
}

type CliPublishProjectResponse {
  created: Boolean
  error: Error
}

type Mutation {
  cliPublishCreate(
    file: ModuleFileInput!
    version: String!
    commit: ModuleCommit!
    progress: PublishProgress!
  ): CliPublishProjectResponse!
}
